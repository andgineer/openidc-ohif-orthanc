access_by_lua_block {
 local opts = {
   client_id = os.getenv("OPENID_CLIENT_ID"),
   client_secret = os.getenv("OPENID_CLIENT_SECRET"),
   discovery = os.getenv("OPENID_DISCOVERY"),
   scope = "openid email profile",

   -- When using https to any OP endpoints, enforcement of SSL certificate check can be mandated ("yes") or not ("no").
   ssl_verify = "no",

   -- Refresh the users id_token after 900 seconds without requiring re-authentication
   refresh_session_interval = 900,

   redirect_uri_scheme = "http",
   redirect_uri_path = "/pacs-admin/admin",
   accept_none_alg = true,
   logout_path = "/logout",
   redirect_after_logout_uri = "http://localhost/auth/realms/imagingcloak/protocol/openid-connect/logout?redirect_uri=http://localhost/",
   redirect_after_logout_with_id_token_hint = false,
   session_contents = {id_token=true}
 }

-- call authenticate for OpenID Connect user authentication
local res, err = require("resty.openidc").authenticate(opts)

if err or not res then
  ngx.print(err)
  ngx.status = 200
  ngx.say(err and err or "no access_token provided")
  ngx.exit(ngx.HTTP_FORBIDDEN)
end

-- Or set cookie?
-- ngx.req.set_header("Authorization", "Bearer " .. res.access_token)
ngx.req.set_header("X-USER", res.id_token.sub)
ngx.log(ngx.NOTICE, "preferred_username: " .. res.id_token.preferred_username)
}